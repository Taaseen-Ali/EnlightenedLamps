Enlightened Lamps
Taaseen Ali
Eddie Zhu
Frank Chen
pd 1
---------------------
Crossword Engine


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Our crossword program have a lot of complex algorithms that had to be converted into code. 
That was certainly the hardest part of this project.
- Figuring out a way to randomly insert words into viable positions in the crossword
- There were two lines in CrosswordBuilder that took an entire day to fix, and it was literally just returning true. Thankfully we found it eventually and added it.


UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- The user has the ability to input a string for the x/y cordinates when using the set keyword in the driver class. Doing so will cause and error.
- Due to the random nature of creating a crossword, some random arrangements make it so that inserting the remaining words impossible. The program simply returns the unsused words in an array. Most of the time this is not an issue, however.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- We learned about the switch statement which is similar to an if-then-else statement but cleaner under certain circumstances.
- how to manipulate files
- that OOP is cool and useful!

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- We decided to add a class called PosiitonedWord because we deemed that it would be useful to seperate new words and words that already have positions when implemetning our various methods in CrosswordBuilder

- We were unable to get to adding the funtionality of the program to take a user created crossword and turn it into an interactive one that can be played on the terminal. Currently, crosswords can only be generated randomly with a list of words and played on the terminal.


LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- It's best not to divide and conquer; doing so leads to conflicting errors when pushing and pulling.
- EXTENSIVE testing is necessary before using a method in other classes. We spent so much time debugging only to find out that an "easy" method that we thought was air-tight really wasn't.

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


2018-01-02
--------------------------------------------------------------
<Frank Chen> :: Added proposal


2018-01-03
--------------------------------------------------------------
<Taaseen Ali> :: Created devlog

2018-01-04
--------------------------------------------------------------
<Taaseen Ali> :: Updated devlog, updated proposal

2018-01-05
--------------------------------------------------------------
<Taaseen Ali> :: Added uml, updated Word.java, added CrosswordPosition.java
<Frank Chen> :: Helped with UML
<Eddie Zhu> :: Helped with Word.java

2018-01-08
--------------------------------------------------------------
<Taaseen Ali> :: Helped with flowchart and todo list
<Frank Chen> :: Helped with todo list
<Eddie Zhu> :: Updated README, added todo list, added initial flowchart

2018-01-09
--------------------------------------------------------------
<Taaseen Ali> :: Updated todo list


2018-01-10
--------------------------------------------------------------
<Taaseen Ali> :: Updated flowchart, updated code
<Frank Chen> :: Added Driver skeleton
<Eddie Zhu> :: Updated devlog and todo list, added ClueBank.java skeleton, added very basic runnable Woo.java

2018-01-11
--------------------------------------------------------------
<Taaseen Ali> :: Updated Code in CrosswordPosition.java and Word.java
<Frank Chen> :: Helped with code
<Eddie Zhu> :: Helped with code, updated flowchart.

2018-01-12
--------------------------------------------------------------
<Taaseen Ali> :: Added wordPosition.java in class
<Frank Chen> :: Helped with wordPosition.java
<Eddie Zhu> :: Helped with wordPosition.java

2018-01-13
--------------------------------------------------------------
<Taaseen Ali> :: Worked on code; implemented getInsertionSites()
<Frank Chen> :: Tested code, gave suggestions
<Eddie Zhu> :: Tested code, gave suggestions

2018-01-14
--------------------------------------------------------------
<Taaseen Ali> :: Worked on code; fixed getInsertionSites, created and spent the day debugging hasAdjacentWords()
<Frank Chen> :: Tested code, gave suggestions
<Eddie Zhu> :: Tested code, gave suggestions

2018-01-15
--------------------------------------------------------------
<Taaseen Ali> :: Made sure Woo.java works with all classesm, updated flow.pdf, uml.pdf
<Frank Chen> :: Remade flowchart and edited README
<Eddie Zhu> :: Updated UML diagram and edited code

==============================================================
